name: "CI"
on:
  pull_request:
  push:
    branches:
      - master

jobs:

  Unit_Tests:
    name: Unit Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Install Node
        uses: actions/setup-node@v6
        with:
          node-version: '*'
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Tests 👩🏽‍💻
        run: npm run test:unit

  Unit_Coverage:
    name: Unit Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Install Node
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Check Coverage 🏁
        run: npm run test:cover

  MySQL_Tests:
    name: MySQL Tests
    strategy:
      fail-fast: false
      matrix:
        version: ['8', '9']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Shutdown Default MySQL
        run: sudo service mysql stop
      - name: Set up MySQL
        env:
          MYSQL_VERSION: ${{ matrix.version }}
        run: |
          sudo docker run -e MYSQL_RANDOM_ROOT_PASSWORD=true -e MYSQL_USER=sequelizr_test -e MYSQL_PASSWORD=sequelizr_test -e MYSQL_DATABASE=sequelizr_test -d -p 3306:3306 --name mysql --health-cmd 'mysqladmin ping --silent' mysql:$MYSQL_VERSION
      - name: Install Node
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Tests 👩🏽‍💻
        env:
          SEQ_DB: sequelizr_test
          SEQ_USER: sequelizr_test
          SEQ_PW: sequelizr_test
          SEQ_HOST: localhost
          SEQ_PORT: 3306
        run: npm run test:mysql

  MSSQL_Tests:
    name: MSSQL Tests
    strategy:
      fail-fast: false
      matrix:
        version: [2019, 2022]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Install MSSQL
        uses: potatoqualitee/mssqlsuite@v1.11
        with:
          install: sqlengine, sqlclient
          version: ${{ matrix.version }}
          sa-password: c0MplicatedP@ssword
          show-log: true
      - name: Setup MSSQL
        run: sqlcmd -S localhost -U sa -P c0MplicatedP@ssword -i ./scripts/mssql/setup.sql -C
      - name: Install Node
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Tests 👩🏽‍💻
        env:
          SEQ_DB: sequelizr_test
          SEQ_USER: sequelizr_test
          SEQ_PW: c0MplicatedP@ssword
          SEQ_HOST: localhost
          SEQ_PORT: 1433
        run: npm run test:mssql

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Install Node
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
      - name: Install Dependencies
        run: npm ci
      - name: Lint ✨
        run: npm run lint

  Release:
    needs: [Unit_Tests, Unit_Coverage, MySQL_Tests, MSSQL_Tests, Lint]
    if: |
      github.ref == 'refs/heads/master' &&
      github.event.repository.fork == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Install Node
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Release 🎉
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
